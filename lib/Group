#pragma once

#include <iostream>
#include <vector>
#include <stdlib.h>
#include <time.h>
using namespace std;

class Group{
	private:
		int *taglia;
		int nPersone;
		int tEntrata;
		int tUscita;
		int id;
		int *skateID;
	public:
		Group(){}
		Group(int nPersone, int id){
			this->nPersone = nPersone;
			taglia = (int*)malloc(sizeof(int)*nPersone);
			for(int i=0; i<nPersone; i++){
				taglia[i] = rand()%21+24;
			}
			skateID = (int*)malloc(sizeof(int)*nPersone);
			tEntrata = 0;
			tUscita = 0;
			this->id = id;
		}
		void setSkateID(int i, int id){
			skateID[i] = id;
		}
		int getSkateID(int i){
			return skateID[i];
		}
		int getID(){
			return id;
		}
		int getNPeople(){
			return nPersone;
		}
		int getSize(int i){
			return taglia[i];
		}
		int getTimeEnter(){
			return tEntrata;
		}
		int getTimeExit(){
			return tUscita;
		}
		void setTimeEnter(int t){
			tEntrata = t;
		}
		void setTimeExit(int t){
			tUscita = t;
		}
};
